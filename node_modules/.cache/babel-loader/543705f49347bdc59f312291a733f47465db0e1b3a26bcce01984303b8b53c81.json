{"ast":null,"code":"var _ = require('../helper');\n\n/* A rule should contain explain and rule methods */\n// TODO explain explain\n// TODO explain missing\n// TODO explain assert\n\nfunction assert(options, password) {\n  return !!password && options.minLength <= password.length;\n}\nfunction explain(options) {\n  if (options.minLength === 1) {\n    return {\n      message: 'Non-empty password required',\n      code: 'nonEmpty'\n    };\n  }\n  return {\n    message: 'At least %d characters in length',\n    format: [options.minLength],\n    code: 'lengthAtLeast'\n  };\n}\nmodule.exports = {\n  validate: function (options) {\n    if (!_.isObject(options)) {\n      throw new Error('options should be an object');\n    }\n    if (!_.isNumber(options.minLength) || _.isNaN(options.minLength)) {\n      throw new Error('length expects minLength to be a non-zero number');\n    }\n    return true;\n  },\n  explain: explain,\n  missing: function (options, password) {\n    var explained = explain(options);\n    explained.verified = !!assert(options, password);\n    return explained;\n  },\n  assert: assert\n};","map":{"version":3,"names":["_","require","assert","options","password","minLength","length","explain","message","code","format","module","exports","validate","isObject","Error","isNumber","isNaN","missing","explained","verified"],"sources":["/Users/sunguannan/VisualStudioProjects/authdemo/node_modules/password-sheriff/lib/rules/length.js"],"sourcesContent":["var _ = require('../helper');\n\n/* A rule should contain explain and rule methods */\n// TODO explain explain\n// TODO explain missing\n// TODO explain assert\n\nfunction assert (options, password) {\n  return !!password && options.minLength <= password.length;\n}\n\nfunction explain(options) {\n  if (options.minLength === 1) {\n    return {\n      message: 'Non-empty password required',\n      code: 'nonEmpty'\n    };\n  }\n\n  return {\n    message: 'At least %d characters in length',\n    format: [options.minLength],\n    code: 'lengthAtLeast'\n  };\n}\n\nmodule.exports = {\n  validate: function (options) {\n    if (!_.isObject(options)) {\n      throw new Error('options should be an object');\n    }\n\n    if (!_.isNumber(options.minLength) || _.isNaN(options.minLength)) {\n      throw new Error('length expects minLength to be a non-zero number');\n    }\n\n    return true;\n  },\n  explain: explain,\n  missing: function (options, password) {\n    var explained = explain(options);\n    explained.verified = !!assert(options, password);\n    return explained;\n  },\n  assert: assert\n};\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAE5B;AACA;AACA;AACA;;AAEA,SAASC,MAAMA,CAAEC,OAAO,EAAEC,QAAQ,EAAE;EAClC,OAAO,CAAC,CAACA,QAAQ,IAAID,OAAO,CAACE,SAAS,IAAID,QAAQ,CAACE,MAAM;AAC3D;AAEA,SAASC,OAAOA,CAACJ,OAAO,EAAE;EACxB,IAAIA,OAAO,CAACE,SAAS,KAAK,CAAC,EAAE;IAC3B,OAAO;MACLG,OAAO,EAAE,6BAA6B;MACtCC,IAAI,EAAE;IACR,CAAC;EACH;EAEA,OAAO;IACLD,OAAO,EAAE,kCAAkC;IAC3CE,MAAM,EAAE,CAACP,OAAO,CAACE,SAAS,CAAC;IAC3BI,IAAI,EAAE;EACR,CAAC;AACH;AAEAE,MAAM,CAACC,OAAO,GAAG;EACfC,QAAQ,EAAE,SAAAA,CAAUV,OAAO,EAAE;IAC3B,IAAI,CAACH,CAAC,CAACc,QAAQ,CAACX,OAAO,CAAC,EAAE;MACxB,MAAM,IAAIY,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,IAAI,CAACf,CAAC,CAACgB,QAAQ,CAACb,OAAO,CAACE,SAAS,CAAC,IAAIL,CAAC,CAACiB,KAAK,CAACd,OAAO,CAACE,SAAS,CAAC,EAAE;MAChE,MAAM,IAAIU,KAAK,CAAC,kDAAkD,CAAC;IACrE;IAEA,OAAO,IAAI;EACb,CAAC;EACDR,OAAO,EAAEA,OAAO;EAChBW,OAAO,EAAE,SAAAA,CAAUf,OAAO,EAAEC,QAAQ,EAAE;IACpC,IAAIe,SAAS,GAAGZ,OAAO,CAACJ,OAAO,CAAC;IAChCgB,SAAS,CAACC,QAAQ,GAAG,CAAC,CAAClB,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC;IAChD,OAAOe,SAAS;EAClB,CAAC;EACDjB,MAAM,EAAEA;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}