{"ast":null,"code":"(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(str, options) {\n    // make sure protocol is followed by two slashes\n    str = str.replace(/:\\//g, '://');\n\n    // remove consecutive slashes\n    str = str.replace(/([^:\\s])\\/+/g, '$1/');\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n    return str;\n  }\n  return function () {\n    var input = arguments;\n    var options = {};\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n});","map":{"version":3,"names":["name","context","definition","module","exports","define","amd","normalize","str","options","replace","input","arguments","joined","slice","call","join"],"sources":["/Users/sunguannan/VisualStudioProjects/authdemo/node_modules/url-join/lib/url-join.js"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (str, options) {\n\n    // make sure protocol is followed by two slashes\n    str = str.replace(/:\\//g, '://');\n\n    // remove consecutive slashes\n    str = str.replace(/([^:\\s])\\/+/g, '$1/');\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n\n});\n"],"mappings":"AAAA,CAAC,UAAUA,IAAI,EAAEC,OAAO,EAAEC,UAAU,EAAE;EACpC,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,OAAO,EAAED,MAAM,CAACC,OAAO,GAAGF,UAAU,CAAC,CAAC,CAAC,KAC9E,IAAI,OAAOG,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAAED,MAAM,CAACH,UAAU,CAAC,CAAC,KACnED,OAAO,CAACD,IAAI,CAAC,GAAGE,UAAU,CAAC,CAAC;AACnC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,YAAY;EAE9B,SAASK,SAASA,CAAEC,GAAG,EAAEC,OAAO,EAAE;IAEhC;IACAD,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC;;IAEhC;IACAF,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC;;IAExC;IACAF,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC;;IAE1C;IACAF,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC;IAErC,OAAOF,GAAG;EACZ;EAEA,OAAO,YAAY;IACjB,IAAIG,KAAK,GAAGC,SAAS;IACrB,IAAIH,OAAO,GAAG,CAAC,CAAC;IAEhB,IAAI,OAAOG,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MACpC;MACAD,KAAK,GAAGC,SAAS,CAAC,CAAC,CAAC;MACpBH,OAAO,GAAGG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC9B;IAEA,IAAIC,MAAM,GAAG,EAAE,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,EAAE,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;IAC9C,OAAOT,SAAS,CAACM,MAAM,EAAEJ,OAAO,CAAC;EACnC,CAAC;AAEH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}